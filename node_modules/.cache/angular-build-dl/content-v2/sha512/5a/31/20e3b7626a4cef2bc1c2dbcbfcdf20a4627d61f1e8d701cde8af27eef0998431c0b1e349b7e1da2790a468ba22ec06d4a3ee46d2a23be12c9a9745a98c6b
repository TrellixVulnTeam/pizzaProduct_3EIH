{"version":3,"sources":["webpack:///src/environments/environment.ts","webpack:///src/app/services/ApiService.ts","webpack:///src/app/component/pizza/pizza.component.html","webpack:///src/app/component/pizza/pizza.component.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["environment","production","ApiService","http","API_URL","get","observe","PizzaComponent","service","pizzaData","console","log","getPizzaData","subscribe","resp","body","event","action","index","plusLessFunction","AppComponent","title","AppModule","routes","AppRoutingModule","forRoot","bootstrapModule","err","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class ApiService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n\r\n  API_URL: string = \"https://raw.githubusercontent.com/boburanvarov/pizza/main/backend/reactPizza.json\";\r\n\r\n  get(): Observable<HttpResponse<any>> {\r\n    return this.http.get<any>(\r\n      this.API_URL, { observe: 'response' });\r\n  }\r\n\r\n  \r\n\r\n}","<div class=\"body\">\n    <div class=\"menu\">\n        <nav class=\"nav\">\n            <div class=\"container\">\n                <div class=\"row\">\n                    <div class=\"col-md-11\">\n                        <a href=\"index.html\" class=\"logo\">\n                            <img src=\"../../../assets/images/logo.png\" alt=\"logo\">\n                            <span class=\"logo-text\">\n                                REACT PIZZA\n                            </span>\n                        </a>\n                    </div>\n\n                    <div class=\"col-md-1\">\n                        <div class=\"shopping-title\">\n                            <h1><i class=\"fa fa-shopping-cart\"></i></h1>\n                        </div>\n                    </div>\n\n                    <div class=\"col-md-12\">\n                        <div class=\"line\"></div>\n                    </div>\n                </div>\n            </div>\n        </nav>\n\n        <div class=\"container\">\n            <div class=\"row\">\n                <div class=\"col-12 product-detail\">\n                    <div id=\"myBtnContainer\">\n                        <button class=\"btn active\" onclick=\"filterSelection('all')\"> All</button>\n                        <button class=\"btn\" onclick=\"filterSelection('chees')\"> Chees</button>\n                        <button class=\"btn\" onclick=\"filterSelection('meat')\"> Meat</button>\n                        <button class=\"btn\" onclick=\"filterSelection('fruits')\">Fruits-Pizza</button>\n                    </div>\n\n                    <div class=\"tab-content\" id=\"myTabContent\">\n                        <!-- single tab -->\n                        <div class=\"tab-pane fade show active\" id=\"all\" role=\"tab-panel\">\n                            <div class=\"tab-single\">\n                                <div class=\"row\">\n                                    <div class=\"col-12\">\n                                        <div class=\"section-title\">\n                                            <h2 id=\"products-type\">All-pizza</h2>\n                                        </div>\n                                    </div>\n\n                                    <!-- start -->\n                                    <div class=\"col-xl-3 col-lg-4 col-md-4 col-12 my-2 chees pizza\"\n                                        *ngFor=\"let pizza of pizzaData; let i = index\">\n                                        <div id=\"pizza-product\">\n                                            <div class=\"single-product\">\n                                                <div class=\"product-img\">\n                                                    <a href=\"#\">\n                                                        <img src=\"{{pizza.image}}\" class=\"img-fluid\" alt=\"#\">\n                                                    </a>\n                                                </div>\n                                            </div>\n                                            <div class=\"product-title\">\n                                                <h3 class=\"text-center\">{{pizza.name}}</h3>\n                                            </div>\n                                            <div class=\"myBtnContainer row\" id=\"productInfo\">\n                                                <button class=\"btn col-md-5 mt-2 pizzaType active\">{{pizza.types.type1}}</button>\n                                                <button class=\"btn col-md-7 mt-2 pizzaType\">{{pizza.types.type2}}</button>\n                                                <button class=\"btn col-md-4 mt-2 pizzaSize active\">{{pizza.sizes.small}}sm</button>\n                                                <button class=\"btn col-md-4 mt-2 pizzaSize\">{{pizza.sizes.norm}}sm</button>\n                                                <button class=\"btn col-md-4 mt-2 pizzaSize\">{{pizza.sizes.big}}sm</button>\n    \n                                                <div class=\"con-price text-center col-md-12\">\n                                                   {{pizza.price}}&#8381;\n                                                </div>\n                                                <div class=\"con-btn col-md-12\">\n                                                    <button id=\"addCart\" onclick=\"handleAdd(event)\" class=\"add\">\n                                                        Add to cart</button>\n                                                    <div class=\"con-input-btns\">\n                                                        <button (click)=\"plusLess($event,'less',i)\" class=\"less\" id=\"minus\">\n                                                            <i class=\"fa fa-minus\"></i></button>\n                                                        <input class='result' type=\"text\" value=\"1\" disabled>\n                                                        <button (click)=\"plusLess($event,'plus',i)\" class=\"less\" id=\"plus\">\n                                                            <i class=\"fa fa-plus\"></i></button>\n                                                    </div>\n                                                </div>\n                                            </div>\n    \n                                        </div>\n                                    </div>\n                                    <!--  -->\n                                    \n                                </div>\n                            </div>\n                        </div>\n                        <!--  -->\n                    </div>\n                </div>\n            </div>\n        </div>\n        <!-- container2 end -->\n        <div class=\"select\">\n            \n        </div>\n    </div>\n</div>\n\n<script src=\"../../../assets/js/main.js\"></script>\n","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from 'src/app/services/ApiService';\n\ndeclare function plusLessFunction(event: Event, action: string, index: number): void;\n\n@Component({\n  selector: 'pizza-page',\n  templateUrl: './pizza.component.html',\n  styleUrls: ['./pizza.component.css']\n})\nexport class PizzaComponent implements OnInit {\n\n  constructor(\n    private service: ApiService\n  ){}\n\n  pizzaData: Array<any> = [];\n\n  ngOnInit(){\n    console.log(\"Pizza page\");\n    this.getPizzaData();\n  }\n\n  getPizzaData(){\n    \n    console.log(\"getPizzaData(): is run\");\n\n    this.service.get().subscribe(resp => {      \n      this.pizzaData = resp.body.pizzaData;\n      console.log(this.pizzaData);\n    });\n  }\n\n  plusLess(event: Event, action: string, index: number){\n\n    plusLessFunction(event, action, index);\n    \n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'pizza';\n}\n","<pizza-page></pizza-page>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { PizzaComponent } from './component/pizza/pizza.component';\nimport { ApiService } from './services/ApiService';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PizzaComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [ApiService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}